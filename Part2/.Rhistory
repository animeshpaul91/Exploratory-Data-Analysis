sales <- read.table(file.choose(), header = T)
sales #to verify that the data has been read
barplot(as.matrix(sales), main="Sales Data", ylab= "Total",beside = T, col=rainbow(5))
fn < -boxplot(sales,col=c("orange","green"))$stats
text(1.45, fn[3,2], paste("Median =", fn[3,2]), adj=0, cex=.7)
text(0.45, fn[3,1],paste("Median =", fn[3,1]), adj=0, cex=.7)
grid(nx=NA, ny=NULL)
fn < -boxplot(sales,col=c("orange","green"))$stats
fn <- boxplot(sales,col=c("orange","green"))$stats
fn
sales
fn <- boxplot(sales, col=c("orange","green")) #$stats
fn <- boxplot(sales, col=c("orange","green")) #$stats
fn <- boxplot(sales, col=c("orange","green")) $stats
fn
fn <- boxplot(sales, col=c("orange","green")) $stats
text(1.45, fn[3,2], paste("Median =", fn[3,2]), adj=0, cex=.7)
text(0.45, fn[3,1],paste("Median =", fn[3,1]), adj=0, cex=.7)
grid(nx=NA, ny=NULL)
sales
fn
fn
fb1 <- read.csv(file.choose())
fb1
aapl1 <- read.csv(file.choose())
par(bg = "cornsilk")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(0,100), xlab="Days", ylab="Price")
fb1 <- read.csv(file.choose())
aapl1 <- read.csv(file.choose())
par(bg = "cornsilk")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(0,100), xlab="Days", ylab="Price")
fb1 <- read.csv(file.choose())
aapl1 <- read.csv(file.choose())
par(bg = "cornsilk")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(0,200), xlab="Days", ylab="Price")
fb1 <- read.csv(file.choose())
aapl1 <- read.csv(file.choose())
par(bg = "cornsilk")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(150,180), xlab="Days", ylab="Price")
a <- data.frame(aapl$Adj)
a <- data.frame(aapl1$Adj)
min(a)
max(a)
fb1 <- read.csv(file.choose())
aapl1 <- read.csv(file.choose())
par(bg = "cornsilk")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(160,180), xlab="Days", ylab="Price")
a <- data.frame(fb1$Adj)
max(a)
min(a)
a <- data.frame(fb1$Adj.Close)
min(a)
max(a)
fb1 <- read.csv(file.choose())
aapl1 <- read.csv(file.choose())
par(bg = "cornsilk")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(160,194), xlab="Days", ylab="Price")
lines(fb1$Adj.Close, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Apple","Facebook"), fill=c("blue","red"), horiz=TRUE)
fb1 <- read.csv(file.choose())
aapl1 <- read.csv(file.choose())
par(bg = "cornsilk")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(160,205), xlab="Days", ylab="Price")
lines(fb1$Adj.Close, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Apple","Facebook"), fill=c("blue","red"), horiz=TRUE)
fb1 <- read.csv(file.choose())
aapl1 <- read.csv(file.choose())
par(bg = "cornsilk")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(160,200), xlab="Days", ylab="Price")
lines(fb1$Adj.Close, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Apple","Facebook"), fill=c("blue","red"), horiz=TRUE)
fb1 <- read.csv(file.choose())
aapl1 <- read.csv(file.choose())
par(bg = "cornsilk")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(160,200), xlab="Days", ylab="Price")
lines(fb1$Adj.Close, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Apple","Facebook"), fill=c("blue","red"), horiz=TRUE)
hist(aapl1$Adj.Close, col=rainbow(8))
fb1 <- read.csv(file.choose())
aapl1 <- read.csv(file.choose())
par(bg = "cornsilk")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(160,200), xlab="Days", ylab="Price")
lines(fb1$Adj.Close, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Apple","Facebook"), fill=c("blue","red"), horiz=TRUE)
title(main = "Histogram of Apple's Stock Price")
hist(aapl1$Adj.Close, col=rainbow(8), xlab = "Stock Price of Apple")
hist(aapl1$Adj.Close, col=rainbow(8), xlab = "Stock Price of Apple")
title(main = "Histogram of Apple's Stock Price")
hist(aapl1$Adj.Close, col=rainbow(8), xlab = "Stock Price of Apple")
title(main = "Histogram of Apple's Stock Price")
hist(aapl1$Adj.Close, col=rainbow(8), xlab = "Stock Price of Apple")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(160,200), xlab="Days", ylab="Price")
lines(fb1$Adj.Close, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Apple","Facebook"), fill=c("blue","red"), horiz=TRUE)
hist(aapl1$Adj.Close, col=rainbow(8), xlab = "Stock Price of Apple")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(160,200), xlab="Days", ylab="Price")
lines(fb1$Adj.Close, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Apple","Facebook"), fill=c("blue","red"), horiz=TRUE)
hist(aapl1$Adj.Close, col=rainbow(8), xlab = "Stock Price of Apple")
par(bg = "cornsilk")
hist(aapl1$Adj.Close, col=rainbow(8), xlab = "Stock Price of Apple")
data()
attach(mpg)
attach(BOD)
BOD
CO2
detach(BOD)
head(BOD)
summary(BOD)
detach(BOG)
detach(BOD)
detach(BOD)
W = attach(women)
W
head(W)
W
attach(women)
head(women)
summary(women)
detach(women)
data(package = .packages(all.available = TRUE))
library(help=datasets)
library(datasets)
library(datasets)
head(uspop)
plot(uspop)
X = uspop
nrow(X)
ncol(X)
uspop
count(X)
library(ggplot2)
attach(mpg)
library(ggplot2)
library(ggplot2)
library(ggplot2)
data()
library(datasets)
head(cars)
cars
cars
cars[0]
cars[1]
cars[2]
plot(cars)
par(bg = "cornsilk")
plot(sales1, col = "blue", type = "o")
par(bg = "cornsilk")
plot(cars, col = "blue", type = "o")
par(bg = "cornsilk")
plot(cars[1], col = "blue", type = "o")
lines(cars[2], type = "o", pch = 22, lty = 2, col = "red")
sales1 <- c(12,14,16,29,30,45,19,20,16,19,34,20)
sales1
cars[1]
c=cars[1]
cars
cars[2]
par(bg = "cornsilk")
plot(cars[1], col = "blue", type = "o")
plot(cars[2], type = "o",  col = "red")
plot(cars$speed, col = "blue", type = "o")
plot(cars$speed, col = "blue", type = "o")
par(bg = "cornsilk")
plot(cars$speed, col = "blue", type = "o")
plot(cars$speed, col = "blue", type = "o", xlab = "Cars", ylab = "Speed&Distance")
plot(cars$speed, col = "blue", type = "o", xlab = "Cars", ylab = "Speed/Distance")
par(bg = "cornsilk")
plot(cars$speed, col = "blue", type = "o", xlab = "Cars", ylab = "Speed/Distance")
lines(cars$dist, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Speed","Distance"), fill=c("blue","red"), horiz=TRUE)
a = data.frame(cars$dist)
max(a)
min(a)
par(bg = "cornsilk")
plot(cars$speed, col = "blue", type = "o", ylim = c(2,125), xlab = "Cars", ylab = "Speed/Distance")
lines(cars$dist, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Speed","Distance"), fill=c("blue","red"), horiz=TRUE)
par(bg = "cornsilk")
plot(cars$speed, col = "blue", type = "o", ylim = c(2,130), xlab = "Cars", ylab = "Speed/Distance")
lines(cars$dist, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Speed","Distance"), fill=c("blue","red"), horiz=TRUE)
par(bg = "cornsilk")
plot(cars$speed, col = "blue", type = "o", ylim = c(2,135), xlab = "Cars", ylab = "Speed/Distance")
lines(cars$dist, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Speed","Distance"), fill=c("blue","red"), horiz=TRUE)
par(bg = "cornsilk")
plot(cars$speed, col = "blue", type = "o", ylim = c(2,145), xlab = "Cars", ylab = "Speed/Distance")
lines(cars$dist, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Speed","Distance"), fill=c("blue","red"), horiz=TRUE)
par(bg = "cornsilk")
plot(cars$speed, col = "blue", type = "o", ylim = c(2,145), xlab = "Cars", ylab = "Metrics")
lines(cars$dist, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Speed","Distance"), fill=c("blue","red"), horiz=TRUE)
data()
library(datasets)
head(cars)
par(bg = "cornsilk")
plot(cars$speed, col = "blue", type = "o", ylim = c(2,145), xlab = "Cars", ylab = "Metrics")
lines(cars$dist, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Speed","Distance"), fill=c("blue","red"), horiz=TRUE)
summary(cars)
library(datasets)
attach(cars)
head(cars)
par(bg = "cornsilk")
plot(cars$speed, col = "blue", type = "o", ylim = c(2,145), xlab = "Cars", ylab = "Metrics")
lines(cars$dist, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Speed","Distance"), fill=c("blue","red"), horiz=TRUE)
summary(cars)
detach(cars)
attach(uspop)
head(uspop)
plot(uspop)
detach(uspop)
library("ggmap")
library(ggmap)
library(ggmap)
library("maptools")
library(maps)
gpclibPermit()
library("maptools")
library(maps)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyC9aEyQjIaX2cm9_V2WLH3wrTCI2R1jldU')
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyC9aEyQjIaX2cm9_V2WLH3wrTCI2R1jldU')
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima,Peru", "Johannesburg, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyCFKZCbu-jzVeMdM78fEy_HmBu_U8Oh2Oo')
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima,Peru", "Johannesburg, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
ll.visited <- geocode(visited)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyCFKZCbu-jzVeMdM78fEy_HmBu_U8Oh2Oo')
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima,Peru", "Johannesburg, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyCFKZCbu-jzVeMdM78fEy_HmBu_U8Oh2Oo')
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima,Peru", "Johannesburg, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = "AIzaSyCFKZCbu-jzVeMdM78fEy_HmBu_U8Oh2Oo")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima,Peru", "Johannesburg, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyCFKZCbu-jzVeMdM78fEy_HmBu_U8Oh2Oo')
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima,Peru", "Johannesburg, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyCFKZCbu-jzVeMdM78fEy_HmBu_U8Oh2Oo')
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima,Peru", "Johannesburg, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyCFKZCbu-jzVeMdM78fEy_HmBu_U8Oh2Oo')
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima,Peru", "Johannesburg, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = "AIzaSyCFKZCbu-jzVeMdM78fEy_HmBu_U8Oh2Oo")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima,Peru", "Johannesburg, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyCFKZCbu-jzVeMdM78fEy_HmBu_U8Oh2Oo')
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima,Peru", "Johannesburg, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
gpclibPermit()
library("ggmap")
library("maptools")
library("maps")
visited <- c("SFO", "New York", "Buffalo", "Dallas, TX")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("state", fill=TRUE, col=rainbow(50), bg="lightblue", mar=c(0,0,0,0))
points(visit.x, visit.y, col="yellow", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyCFKZCbu-jzVeMdM78fEy_HmBu_U8Oh2Oo')
visited <- c("SFO", "New York", "Buffalo", "Dallas, TX")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("state", fill=TRUE, col=rainbow(50), bg="lightblue", mar=c(0,0,0,0))
points(visit.x, visit.y, col="yellow", pch=36)
library("ggmap")
library("maptools")
library("maps")
#register_google(key = 'AIzaSyCFKZCbu-jzVeMdM78fEy_HmBu_U8Oh2Oo')
visited <- c("SFO", "New York", "Buffalo", "Dallas, TX")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("state", fill=TRUE, col=rainbow(50), bg="lightblue", mar=c(0,0,0,0))
points(visit.x, visit.y, col="yellow", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyCFKZCbu-jzVeMdM78fEy_HmBu_U8Oh2Oo')
visited <- c("SFO", "New York", "Buffalo", "Dallas, TX")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("state", fill=TRUE, col=rainbow(50), bg="lightblue", mar=c(0,0,0,0))
points(visit.x, visit.y, col="yellow", pch=36)
mtcars
summary(mtcars)
summary(mtcars)
cars
mtcars
summary(mtcars)
attach(mtcars)
head(mtcars)
plot(mtcars[c(1,3,4,5,6)], main="MTCARS Data")
attach(mtcars)
head(mtcars)
plot(mtcars[c(1,3,4,5,6)], col=rainbow(5), main="MTCARS Data")
plot(mtcars[c(1,3,4,6)], col=rainbow(10), main="MTCARS Data")
plot(mtcars[c(3)], col=rainbow(10), main="MTCARS Data")
plot(mtcars[c(4)], col=rainbow(10), main="MTCARS Data")
plot(mtcars[c(3,4)], col=rainbow(10), main="MTCARS Data")
plot(mtcars[c(1,3,4)], col=rainbow(10), main="MTCARS Data")
library(ggplot2)
ggplot(mtcars, aes(x=mpg, y=disp)) + geom_point()
data()
attach(uspop)
data()
library(datasets)
attach(cars)
head(cars)
par(bg = "cornsilk")
plot(cars$speed, col = "blue", type = "o", ylim = c(2,145), xlab = "Cars", ylab = "Metrics")
lines(cars$dist, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Speed","Distance"), fill=c("blue","red"), horiz=TRUE)
summary(cars)
detach(cars)
attach(uspop)
head(uspop)
plot(uspop)
detach(uspop)
attach(mtcars)
head(mtcars)
plot(mtcars[c(1,3,4,5,6)], col=rainbow(5), main="MTCARS Data")
plot(mtcars[c(1,3,4,6)], col=rainbow(10), main="MTCARS Data")
plot(mtcars[c(1,3,4)], col=rainbow(10), main="MTCARS Data")
library(ggplot2)
ggplot(mtcars, aes(x=mpg, y=disp)) + geom_point()
statesData<-read.csv("Task4_Inputs/StateDataforMap_2018-19week5.csv")
statesData$region <- tolower(statesData$STATENAME)
library(ggplot2)
library(maps)
library(stringr)
states <- map_data("state")
map.df <- merge(states,statesData, by="region", all.x=T)
map.df <- map.df[order(map.df$order),]
act<-as.integer(str_sub(map.df$ACTIVITY.LEVEL,-2,-1))
ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=act))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)))+#,na.value="grey90")+
coord_map()
statesData<-read.csv("StateDataforMap_2018-19week5.csv")
statesData$region <- tolower(statesData$STATENAME)
library(ggplot2)
library(maps)
library(stringr)
states <- map_data("state")
map.df <- merge(states,statesData, by="region", all.x=T)
map.df <- map.df[order(map.df$order),]
act<-as.integer(str_sub(map.df$ACTIVITY.LEVEL,-2,-1))
ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=act))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)))+#,na.value="grey90")+
coord_map()
statesData<-read.csv("StateDataforMap_2018-19week5.csv")
statesData$region <- tolower(statesData$STATENAME)
library(ggplot2)
library(maps)
library(stringr)
states <- map_data("state")
map.df <- merge(states,statesData, by="region", all.x=T)
map.df <- map.df[order(map.df$order),]
act<-as.integer(str_sub(map.df$ACTIVITY.LEVEL,-2,-1))
ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=act))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)))+#,na.value="grey90")+
coord_map()
statesData<-read.csv("Task4_Inputs/StateDataforMap_2018-19week4.csv")
statesData$region <- tolower(statesData$STATENAME)
library(ggplot2)
library(maps)
library(stringr)
states <- map_data("state")
map.df <- merge(states,statesData, by="region", all.x=T)
map.df <- map.df[order(map.df$order),]
act<-as.integer(str_sub(map.df$ACTIVITY.LEVEL,-2,-1))
ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=act))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)))+#,na.value="grey90")+
coord_map()
statesData<-read.csv("Task4_Inputs/StateDataforMap_2018-19week4.csv")
statesData$region <- tolower(statesData$STATENAME)
library(ggplot2)
library(maps)
library(stringr)
states <- map_data("state")
map.df <- merge(states,statesData, by="region", all.x=T)
map.df <- map.df[order(map.df$order),]
act<-as.integer(str_sub(map.df$ACTIVITY.LEVEL,-2,-1))
ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=act))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)))+#,na.value="grey90")+
coord_map()
getwd()
setwd("/home/animesh/Part2")
statesData<-read.csv("Task4_Inputs/StateDataforMap_2018-19week4.csv")
statesData$region <- tolower(statesData$STATENAME)
library(ggplot2)
library(maps)
library(stringr)
states <- map_data("state")
map.df <- merge(states,statesData, by="region", all.x=T)
map.df <- map.df[order(map.df$order),]
act<-as.integer(str_sub(map.df$ACTIVITY.LEVEL,-2,-1))
ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=act))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)))+#,na.value="grey90")+
coord_map()
install.packages(mapproj)
install.packages("mapproj")
statesData<-read.csv("Task4_Inputs/StateDataforMap_2018-19week4.csv")
statesData$region <- tolower(statesData$STATENAME)
library(ggplot2)
library(maps)
library(stringr)
states <- map_data("state")
map.df <- merge(states,statesData, by="region", all.x=T)
map.df <- map.df[order(map.df$order),]
act<-as.integer(str_sub(map.df$ACTIVITY.LEVEL,-2,-1))
ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=act))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)))+#,na.value="grey90")+
coord_map()
